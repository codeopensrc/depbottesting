name: Main

  #on:
  #  pull_request:
  #  workflow_dispatch:
on:
  push:
    branches:
      - main
    tags:
      - "prod-*"
      - "staging-*"
      #- "prod-*.*.*"
      #- "staging-*.*.*"
  pull_request:
    types: [ opened, reopened, synchronize ]
  #pull_request:
  #  ## Find which one a rebase triggers
  #  types: [ synchronize ]
  #  #types: [ edited ]

jobs:
  dependabot-build:
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    uses: ./.github/workflows/buildtest.yml
    with:
      job: build
    secrets: inherit

  echo-user:
    name: Echo user
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: |
          echo "github.event.commits[0].author.name ${{ github.event.commits[0].author.name }}"
          echo "github.event.head.user.login ${{ github.event.head.user.login }}"
          echo "github.event.base.user.login ${{ github.event.base.user.login }}"
          echo "GITHUB_ACTOR ${GITHUB_ACTOR}"

  main-echo:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Echo main only
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: |
          echo "Job only run on main workflow"

  ### TODO: Try giving the app full permissions and see if thats the issue
  # It worked for dep bot merges so not sure
  tag-prerelease:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Prerelease staging tag
    runs-on: ubuntu-latest
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.DEPENDABOT_MERGE_APP_ID }}
          private-key: ${{ secrets.DEPENDABOT_MERGE_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v2
        with: 
          token: ${{ steps.generate-token.outputs.token }}

      - name: Create Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "staging-${{ github.sha }}" -m "PreRelease staging-${{ github.sha }}"
          git push origin "staging-${{ github.sha }}"

        #git tag "staging-${{ github.sha }}"
        #git push origin --tags
  tag-echo:
    if: ${{ contains(github.ref, 'refs/tags') }}
    name: Echo tagged only
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: |
          echo "Job only run on tagged workflow"
          echo ${{ github.ref }}

  tag-release:
    if: ${{ contains(github.ref, 'refs/tags/staging') && github.event.commits[0].author.name == 'dependabot[bot]' }}
    name: Release prod tag
    runs-on: ubuntu-latest
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.DEPENDABOT_MERGE_APP_ID }}
          private-key: ${{ secrets.DEPENDABOT_MERGE_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v2
        with: 
          token: ${{ steps.generate-token.outputs.token }}

      - name: Create Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "prod-${{ github.sha }}" -m "Release prod-${{ github.sha }}"
          git push origin "prod-${{ github.sha }}"


        #git tag "prod-${{ github.sha }}"
        #git push origin --tags
 
  ###TODO: It may be easier/simpler to just have it completely separate due to not being able to 
  ###   have multiple on.pull_request directives in a single workflow file
  #merge:
  #  ### Get if PR closed
  #  ## check if against main here or in workflow
  #  if: ${{ github.event.pull_request.merged == true }}
  #  uses: ./.github/workflows/mergetest.yml
  #  with:
  #    job: merge
  #  secrets: inherit

      #- name: Add a label for all production dependencies
      #  if: steps.metadata.outputs.dependency-type == 'direct:production'
      #  run: gh pr edit "$PR_URL" --add-label "low"
      #  env:
      #    PR_URL: ${{github.event.pull_request.html_url}}

      #- name: Enable auto-merge for Dependabot PRs
      #  if: contains(steps.metadata.outputs.dependency-names, 'my-dependency') && steps.metadata.outputs.update-type == 'version-update:semver-patch'
      #  run: gh pr merge --auto --merge "$PR_URL"
      #  env:
      #    PR_URL: ${{github.event.pull_request.html_url}}
      #    GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
